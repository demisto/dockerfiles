name: Auto Approve
on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Check auto approve
        id: auto_approve_check
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
          GITHUB_ACTOR: ${{ github.actor }}
          PULL_TITLE: ${{ github.event.pull_request.title }}
        run: |
          echo "$GITHUB_CONTEXT"
          echo "Actor: $GITHUB_ACTOR"
          echo "Pull title: $PULL_TITLE"
          if [[ "$GITHUB_ACTOR" != "dependabot-preview[bot]" && "$GITHUB_ACTOR" != 'dependabot[bot]' ]]; then
            echo "$GITHUB_ACTOR is not listed for auto approve"
            exit 0
          fi
          demisto_bump='^(build\(deps\): )?[B|b]ump demisto/.*'
          if [[ "$PULL_TITLE" =~ $demisto_bump ]];then
            echo "::set-output name=approved::true";
            exit 0
          fi
          minor_regex='^(build\(deps\): )?[B|b]ump .+ from ([[:digit:]]+)\.([[:digit:]]+)\.([[:digit:]]+) to ([[:digit:]]+)\.([[:digit:]]+)\.([[:digit:]]+)'
          if [[ "$PULL_TITLE" =~  $minor_regex ]]; then
              if [[ "${BASH_REMATCH[2]}" == "${BASH_REMATCH[5]}" ]]; then
                  echo "patch/minor version upgrade. approving"
                  echo "::set-output name=approved::true";
                  exit 0
              else
                  echo "major versions ${BASH_REMATCH[2]} != ${BASH_REMATCH[5]} don't match. not approving"
              fi
          fi
          echo "Pull title [$PULL_TITLE] not approved"
      - uses: hmarr/auto-approve-action@v2.0.0
        if: steps.auto_approve_check.outputs.approved == 'true'
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

