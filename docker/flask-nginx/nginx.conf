# /etc/nginx/nginx.conf

user nginx;

# Set number of worker processes automatically based on number of CPU cores.
# default value: 1
# worker_processes 1;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

# Configures default error logger.
error_log /var/log/nginx/error.log warn;

# Includes files with directives to load dynamic modules.
include /etc/nginx/modules/*.conf;


events {
	# The maximum number of simultaneous connections that can be opened by
	# a worker process.
	worker_connections 1024;
}

http {
	# Includes mapping of file name extensions to MIME types of responses
	# and defines the default type.
	include /etc/nginx/mime.types;
	
	# root directory to serve static files
	root /var/lib/nginx/html;

	# Name servers used to resolve names of upstream servers into addresses.
	# It's also needed when using tcpsocket and udpsocket in Lua modules.
	#resolver 208.67.222.222 208.67.220.220;

	# Don't tell nginx version to clients.
	server_tokens off;

	# Specifies the maximum accepted body size of a client request, as
	# indicated by the request header Content-Length. If the stated content
	# length is greater than this size, then the client receives the HTTP
	# error code 413. Set to 0 to disable.
	client_max_body_size 1m;

	# Timeout for keep-alive connections. Server will close connections after
	# this time.
	keepalive_timeout 65;

	# Sendfile copies data between one FD and other from within the kernel,
	# which is more efficient than read() + write().
	sendfile on;

	# Don't buffer data-sends (disable Nagle algorithm).
	# Good for sending frequent small bursts of data in real time.
	tcp_nodelay on;

	# Causes nginx to attempt to send its HTTP response head in one packet,
	# instead of using partial frames.
	#tcp_nopush on;


	# Path of the file with Diffie-Hellman parameters for EDH ciphers.
	#ssl_dhparam /etc/ssl/nginx/dh2048.pem;

	# Specifies that our cipher suits should be preferred over client ciphers.
	ssl_prefer_server_ciphers on;

	# Enables a shared SSL cache with size that can hold around 8000 sessions.
	ssl_session_cache shared:SSL:2m;

	# Enable gzipping of responses.
	gzip on;

	# Set the Vary HTTP header as defined in the RFC 2616.
	gzip_vary on;

	# Min size for gzip
	gzip_min_length 512;

	# Set gzip types
	gzip_types
        text/javascript		
        text/xml
        text/plain
        application/javascript
        application/x-javascript
        application/json;

	# Compress even if via a proxy
	gzip_proxied any;

	# Enable checking the existence of precompressed files.
	# gzip_static on;

	# Sets the HTTP protocol version for proxying.
	proxy_http_version 1.1;

	# Specifies the main log format.
	log_format main '$remote_addr - $remote_user [$time_local] "$request" '
			'$status $body_bytes_sent "$http_referer" '
			'"$http_user_agent" "$http_x_forwarded_for"';

	# Sets the path, format, and configuration for a buffered log write.
	access_log /var/log/nginx/access.log main;

	# Cache config https://docs.nginx.com/nginx/admin-guide/content-cache/content-caching/
	proxy_cache_path /var/lib/nginx/tmp/cache levels=1:2 keys_zone=mycache:5m max_size=2g inactive=60m use_temp_path=off;
	proxy_cache mycache;
	# Fine grain control is managed by the upstream server via the Expires header. We set a 5m default for safety.
	# see: https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_valid
	proxy_cache_valid 5m;
	proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504 http_429;
	proxy_cache_background_update on;
	proxy_cache_lock on;
	proxy_cache_lock_age 60s;
	proxy_cache_lock_timeout 60s;

	# Includes virtual hosts configs.
	include /etc/nginx/conf.d/*.conf;
}
